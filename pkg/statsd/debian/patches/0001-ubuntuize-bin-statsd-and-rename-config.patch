From 23f54afc25b08031dc888e3c5c77a3fbfad942ba Mon Sep 17 00:00:00 2001
From: Nick Stenning <nick@whiteink.com>
Date: Fri, 12 Jul 2013 16:16:51 +0100
Subject: [PATCH] Ubuntuize bin/statsd and rename config

---
 bin/statsd       |  2 +-
 exampleConfig.js | 94 --------------------------------------------------------
 statsd.conf      | 94 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 95 insertions(+), 95 deletions(-)
 delete mode 100644 exampleConfig.js
 create mode 100644 statsd.conf

diff --git a/bin/statsd b/bin/statsd
index fd4c925..584d8cc 100755
--- a/bin/statsd
+++ b/bin/statsd
@@ -1,2 +1,2 @@
 #!/usr/bin/env node
-require('./../stats.js');
\ No newline at end of file
+require('/usr/share/statsd/stats.js');
diff --git a/exampleConfig.js b/exampleConfig.js
deleted file mode 100644
index b03fcec..0000000
--- a/exampleConfig.js
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
-
-Required Variables:
-
-  port:             StatsD listening port [default: 8125]
-
-Graphite Required Variables:
-
-(Leave these unset to avoid sending stats to Graphite.
- Set debug flag and leave these unset to run in 'dry' debug mode -
- useful for testing statsd clients without a Graphite server.)
-
-  graphiteHost:     hostname or IP of Graphite server
-  graphitePort:     port of Graphite server
-
-Optional Variables:
-
-  backends:         an array of backends to load. Each backend must exist
-                    by name in the directory backends/. If not specified,
-                    the default graphite backend will be loaded.
-  debug:            debug flag [default: false]
-  address:          address to listen on over UDP [default: 0.0.0.0]
-  address_ipv6:     defines if the address is an IPv4 or IPv6 address [true or false, default: false]
-  port:             port to listen for messages on over UDP [default: 8125]
-  mgmt_address:     address to run the management TCP interface on
-                    [default: 0.0.0.0]
-  mgmt_port:        port to run the management TCP interface on [default: 8126]
-  dumpMessages:     log all incoming messages
-  flushInterval:    interval (in ms) to flush to Graphite
-  percentThreshold: for time information, calculate the Nth percentile(s)
-                    (can be a single value or list of floating-point values)
-                    [%, default: 90]
-  keyFlush:         log the most frequently sent keys [object, default: undefined]
-    interval:       how often to log frequent keys [ms, default: 0]
-    percent:        percentage of frequent keys to log [%, default: 100]
-    log:            location of log file for frequent keys [default: STDOUT]
-  deleteIdleStats:  don't send values to graphite for inactive counters, sets, gauges, or timeers
-                    as opposed to sending 0.  For gauges, this unsets the gauge (instead of sending
-                    the previous value). Can be indivdually overriden. [default: false]
-  deleteGauges  :   don't send values to graphite for inactive gauges, as opposed to sending the previous value [default: false]
-  deleteTimers:     don't send values to graphite for inactive timers, as opposed to sending 0 [default: false]
-  deleteSets:       don't send values to graphite for inactive sets, as opposed to sending 0 [default: false]
-  deleteCounters:   don't send values to graphite for inactive counters, as opposed to sending 0 [default: false]
-  prefixStats:      prefix to use for the statsd statistics data for this running instance of statsd [default: statsd]
-                    applies to both legacy and new namespacing
-
-  console:
-    prettyprint:    whether to prettyprint the console backend
-                    output [true or false, default: true]
-
-  log:              log settings [object, default: undefined]
-    backend:        where to log: stdout or syslog [string, default: stdout]
-    application:    name of the application for syslog [string, default: statsd]
-    level:          log level for [node-]syslog [string, default: LOG_INFO]
-
-  graphite:
-    legacyNamespace:  use the legacy namespace [default: true]
-    globalPrefix:     global prefix to use for sending stats to graphite [default: "stats"]
-    prefixCounter:    graphite prefix for counter metrics [default: "counters"]
-    prefixTimer:      graphite prefix for timer metrics [default: "timers"]
-    prefixGauge:      graphite prefix for gauge metrics [default: "gauges"]
-    prefixSet:        graphite prefix for set metrics [default: "sets"]
-
-  repeater:         an array of hashes of the for host: and port:
-                    that details other statsd servers to which the received
-                    packets should be "repeated" (duplicated to).
-                    e.g. [ { host: '10.10.10.10', port: 8125 },
-                           { host: 'observer', port: 88125 } ]
-
-  repeaterProtocol: whether to use udp4 or udp6 for repeaters.
-                    ["udp4" or "udp6", default: "udp4"]
-
-    histogram:      for timers, an array of mappings of strings (to match metrics) and
-                    corresponding ordered non-inclusive upper limits of bins.
-                    For all matching metrics, histograms are maintained over
-                    time by writing the frequencies for all bins.
-                    'inf' means infinity. A lower limit of 0 is assumed.
-                    default: [], meaning no histograms for any timer.
-                    First match wins.  examples:
-                    * histogram to only track render durations, with unequal
-                      class intervals and catchall for outliers:
-                      [ { metric: 'render', bins: [ 0.01, 0.1, 1, 10, 'inf'] } ]
-                    * histogram for all timers except 'foo' related,
-                      equal class interval and catchall for outliers:
-                     [ { metric: 'foo', bins: [] },
-                       { metric: '', bins: [ 50, 100, 150, 200, 'inf'] } ]
-
-*/
-{
-  graphitePort: 2003
-, graphiteHost: "graphite.example.com"
-, port: 8125
-, backends: [ "./backends/graphite" ]
-}
diff --git a/statsd.conf b/statsd.conf
new file mode 100644
index 0000000..b03fcec
--- /dev/null
+++ b/statsd.conf
@@ -0,0 +1,94 @@
+/*
+
+Required Variables:
+
+  port:             StatsD listening port [default: 8125]
+
+Graphite Required Variables:
+
+(Leave these unset to avoid sending stats to Graphite.
+ Set debug flag and leave these unset to run in 'dry' debug mode -
+ useful for testing statsd clients without a Graphite server.)
+
+  graphiteHost:     hostname or IP of Graphite server
+  graphitePort:     port of Graphite server
+
+Optional Variables:
+
+  backends:         an array of backends to load. Each backend must exist
+                    by name in the directory backends/. If not specified,
+                    the default graphite backend will be loaded.
+  debug:            debug flag [default: false]
+  address:          address to listen on over UDP [default: 0.0.0.0]
+  address_ipv6:     defines if the address is an IPv4 or IPv6 address [true or false, default: false]
+  port:             port to listen for messages on over UDP [default: 8125]
+  mgmt_address:     address to run the management TCP interface on
+                    [default: 0.0.0.0]
+  mgmt_port:        port to run the management TCP interface on [default: 8126]
+  dumpMessages:     log all incoming messages
+  flushInterval:    interval (in ms) to flush to Graphite
+  percentThreshold: for time information, calculate the Nth percentile(s)
+                    (can be a single value or list of floating-point values)
+                    [%, default: 90]
+  keyFlush:         log the most frequently sent keys [object, default: undefined]
+    interval:       how often to log frequent keys [ms, default: 0]
+    percent:        percentage of frequent keys to log [%, default: 100]
+    log:            location of log file for frequent keys [default: STDOUT]
+  deleteIdleStats:  don't send values to graphite for inactive counters, sets, gauges, or timeers
+                    as opposed to sending 0.  For gauges, this unsets the gauge (instead of sending
+                    the previous value). Can be indivdually overriden. [default: false]
+  deleteGauges  :   don't send values to graphite for inactive gauges, as opposed to sending the previous value [default: false]
+  deleteTimers:     don't send values to graphite for inactive timers, as opposed to sending 0 [default: false]
+  deleteSets:       don't send values to graphite for inactive sets, as opposed to sending 0 [default: false]
+  deleteCounters:   don't send values to graphite for inactive counters, as opposed to sending 0 [default: false]
+  prefixStats:      prefix to use for the statsd statistics data for this running instance of statsd [default: statsd]
+                    applies to both legacy and new namespacing
+
+  console:
+    prettyprint:    whether to prettyprint the console backend
+                    output [true or false, default: true]
+
+  log:              log settings [object, default: undefined]
+    backend:        where to log: stdout or syslog [string, default: stdout]
+    application:    name of the application for syslog [string, default: statsd]
+    level:          log level for [node-]syslog [string, default: LOG_INFO]
+
+  graphite:
+    legacyNamespace:  use the legacy namespace [default: true]
+    globalPrefix:     global prefix to use for sending stats to graphite [default: "stats"]
+    prefixCounter:    graphite prefix for counter metrics [default: "counters"]
+    prefixTimer:      graphite prefix for timer metrics [default: "timers"]
+    prefixGauge:      graphite prefix for gauge metrics [default: "gauges"]
+    prefixSet:        graphite prefix for set metrics [default: "sets"]
+
+  repeater:         an array of hashes of the for host: and port:
+                    that details other statsd servers to which the received
+                    packets should be "repeated" (duplicated to).
+                    e.g. [ { host: '10.10.10.10', port: 8125 },
+                           { host: 'observer', port: 88125 } ]
+
+  repeaterProtocol: whether to use udp4 or udp6 for repeaters.
+                    ["udp4" or "udp6", default: "udp4"]
+
+    histogram:      for timers, an array of mappings of strings (to match metrics) and
+                    corresponding ordered non-inclusive upper limits of bins.
+                    For all matching metrics, histograms are maintained over
+                    time by writing the frequencies for all bins.
+                    'inf' means infinity. A lower limit of 0 is assumed.
+                    default: [], meaning no histograms for any timer.
+                    First match wins.  examples:
+                    * histogram to only track render durations, with unequal
+                      class intervals and catchall for outliers:
+                      [ { metric: 'render', bins: [ 0.01, 0.1, 1, 10, 'inf'] } ]
+                    * histogram for all timers except 'foo' related,
+                      equal class interval and catchall for outliers:
+                     [ { metric: 'foo', bins: [] },
+                       { metric: '', bins: [ 50, 100, 150, 200, 'inf'] } ]
+
+*/
+{
+  graphitePort: 2003
+, graphiteHost: "graphite.example.com"
+, port: 8125
+, backends: [ "./backends/graphite" ]
+}
-- 
1.8.2

